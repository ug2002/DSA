class Result {
    public static String isValid(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i=0; i<s.length(); i++){
            char ch = s.charAt(i);
            if(map.containsKey(ch)){
                map.put(ch, (map.get(ch)+1));
            }
            else{
                map.put(ch, 1);
            }
        }
        int[] arr = new int[map.size()];
        int i =0;
        for (Map.Entry<Character, Integer> entry : map.entrySet()) {
                arr[i++] = entry.getValue();
        }
        Arrays.sort(arr);
        if (map.size() == 1) return "YES";
        int first = arr[0];
        int second = arr[1];
        int secondLast = arr[arr.length - 2];
        int last = arr[arr.length - 1];

        // If first and last are same, then all frequencies are same
        if (first == last) return "YES";

        // If first is 1, and all other characters have 1 frequency
        if (first == 1 && second == last) return "YES";

        // If all are same and last character has just 1 extra count
        if (first == second && second == secondLast && secondLast == (last - 1)) return "YES";

        // Else invalid string
        return "NO";

    }
}
